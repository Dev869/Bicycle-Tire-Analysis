[{"name":"app.R","content":"library(shiny)\nlibrary(rvest)\nlibrary(tidyverse)\nlibrary(polite)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(plotly)\nlibrary(rsconnect)\nlibrary(shinylive)\nlibrary(httpuv)\n\n# URL for the road bike reviews page\nbase_url <- \"https://www.bicyclerollingresistance.com/road-bike-reviews\"\nstart_url <- \"https://www.bicyclerollingresistance.com/road-bike-reviews\"\n\nextract_tire_info <- purrr::possibly(\n  function(tire) {\n    tibble(\n      brand = tire %>%\n        html_element(\".brand\") %>%\n        html_text(trim = TRUE) %>%\n        # Ensure that even if a brand is missing, the column exists\n        replace_na(\"\"),\n      model = tire %>%\n        html_element(\".model\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      rolling_resistance_watts = tire %>%\n        html_element(\".rrM\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      width_claimed = tire %>%\n        html_element(\".widths\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      weight_claimed = tire %>%\n        html_element(\".sweight\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      wet_grip = tire %>%\n        html_element(\".wga\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      puncture_score = tire %>%\n        html_element(\".pr\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      thickness = tire %>%\n        html_element(\".thick\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      knob_center = tire %>%\n        html_element(\".knob\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      knob_edge = tire %>%\n        html_element(\".knobedge\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\")\n      \n    )\n  },\n  otherwise = NULL\n)\n\nsession <- polite::bow(start_url)\npage_html <- polite::scrape(session)\n\nmessage(paste(\"Scraping page:\", start_url))\n\n# Extract \ntire_elements <- page_html %>%\n  html_elements(\"tr\") %>%\n  head(180) # indicate the number of tires\n\n# Check if there are any tire elements\nif (length(tire_elements) == 0) {\n  stop(\"No tire elements found on the page.\")\n}\n\n# Use purrr::map to safely parse the data from the limited list of elements\ntire_data_list <- purrr::map(tire_elements, extract_tire_info)\n\n# Remove any NULL entries from the list before binding rows\ntire_data_list <- purrr::compact(tire_data_list)\n\n# Combine the list of tibbles into a single data frame\ndata_raw <- bind_rows(tire_data_list)\n\n# Convert the character column to a numeric data type\ndata_clean <- data_raw %>%\n  # Use mutate() to modify the existing column\n  mutate(\n    # Simply convert the character string to a numeric data type\n    rolling_resistance_watts = as.numeric(rolling_resistance_watts),\n    width_claimed = as.numeric(width_claimed),\n    weight_claimed = as.numeric(weight_claimed),\n    wet_grip = as.numeric(wet_grip),\n    puncture_score = as.numeric(puncture_score),\n    thickness = as.numeric(thickness),\n    knob_center = as.numeric(knob_center),\n    knob_edge = as.numeric(knob_edge)\n  )\n\n# View the cleaned data\nmessage(\"\\nCleaned and converted data:\")\n\n\n# Get a list of the numeric columns available for plotting\nplot_vars <- data_clean %>%\n  select(where(is.numeric)) %>%\n  names()\n\n# --- User Interface (UI) ---\nui <- fluidPage(\n  titlePanel(\"bicyclerollingresistance.com Tire Data Explorer\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"x_var\", \"X-Axis Variable:\",\n                  choices = plot_vars, selected = \"rolling_resistance_watts\"),\n      selectInput(\"y_var\", \"Y-Axis Variable:\",\n                  choices = plot_vars, selected = \"puncture_score\"),\n      hr(),\n      h4(\"Correlation (r-value):\"),\n      textOutput(\"correlation_output\")\n    ),\n    mainPanel(\n      plotlyOutput(\"interactive_plot\", width = \"100%\", height = \"600px\")\n    )\n  )\n)\n\n# --- Server Logic ---\nserver <- function(input, output) {\n\n  correlation_value <- reactive({\n    req(input$x_var, input$y_var)\n    x_data <- data_clean[[input$x_var]]\n    y_data <- data_clean[[input$y_var]]\n    clean_data <- na.omit(data.frame(x = x_data, y = y_data))\n    cor_val <- cor(clean_data$x, clean_data$y, use = \"complete.obs\")\n    round(cor_val, 2)\n  })\n\n  output$interactive_plot <- renderPlotly({\n    req(input$x_var, input$y_var)\n\n    p <- ggplot(data_clean, aes_string(x = input$x_var, y = input$y_var)) +\n      geom_point(aes(color = brand,\n                     text = paste(\"Brand:\", brand, \"<br>Model:\", model))) +\n      labs(title = paste(input$y_var, \"vs.\", input$x_var),\n           x = input$x_var,\n           y = input$y_var) +\n      theme_minimal()\n\n    ggplotly(p, tooltip = \"text\")\n  })\n\n  output$correlation_output <- renderText({\n    paste(\"r =\", correlation_value())\n  })\n}\n\n# --- Run the application ---\nshinyApp(ui = ui, server = server)","type":"text"},{"name":"project.Rproj","content":"Version: 1.0\n\nRestoreWorkspace: Default\nSaveWorkspace: Default\nAlwaysSaveHistory: Default\n\nEnableCodeIndexing: Yes\nUseSpacesForTab: Yes\nNumSpacesForTab: 2\nEncoding: UTF-8\n\nRnwWeave: Sweave\nLaTeX: pdfLaTeX\n","type":"text"},{"name":"rolling-resistance-analysis.Rmd","content":"---\ntitle: \"Bicycle Tire Rolling Resistance Analysis\"\nauthor: \"Devin Wilson\"\ndate: \"2025-09-30\"\noutput: html_document\nruntime: shiny\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n```{r, include=FALSE}\n\nlibrary(shiny)\nlibrary(rvest)\nlibrary(tidyverse)\nlibrary(polite)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(plotly)\nlibrary(rsconnect)\n\n```\n\n```{r define-url, include = FALSE}\n# URL for the road bike reviews page\nbase_url <- \"https://www.bicyclerollingresistance.com/cx-gravel-reviews\"\nstart_url <- \"https://www.bicyclerollingresistance.com/cx-gravel-reviews\"\n```\n\n```{r scraper, include=FALSE}\nextract_tire_info <- purrr::possibly(\n  function(tire) {\n    tibble(\n      brand = tire %>%\n        html_element(\".brand\") %>%\n        html_text(trim = TRUE) %>%\n        # Ensure that even if a brand is missing, the column exists\n        replace_na(\"\"),\n      model = tire %>%\n        html_element(\".model\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      rolling_resistance_watts = tire %>%\n        html_element(\".rrM\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      width_claimed = tire %>%\n        html_element(\".widths\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      weight_claimed = tire %>%\n        html_element(\".sweight\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      wet_grip = tire %>%\n        html_element(\".wga\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      puncture_score = tire %>%\n        html_element(\".pr\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      thickness = tire %>%\n        html_element(\".thick\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      knob_center = tire %>%\n        html_element(\".knob\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\"),\n      knob_edge = tire %>%\n        html_element(\".knobedge\") %>%\n        html_text(trim = TRUE) %>%\n        replace_na(\"\")\n      \n    )\n  },\n  otherwise = NULL\n)\n\nsession <- polite::bow(start_url)\npage_html <- polite::scrape(session)\n\nmessage(paste(\"Scraping page:\", start_url))\n\n# Extract \ntire_elements <- page_html %>%\n  html_elements(\"tr\") %>%\n  head(180) # indicate the number of tires\n\n# Check if there are any tire elements\nif (length(tire_elements) == 0) {\n  stop(\"No tire elements found on the page.\")\n}\n\n# Use purrr::map to safely parse the data from the limited list of elements\ntire_data_list <- purrr::map(tire_elements, extract_tire_info)\n\n# Remove any NULL entries from the list before binding rows\ntire_data_list <- purrr::compact(tire_data_list)\n\n# Combine the list of tibbles into a single data frame\ndata_raw <- bind_rows(tire_data_list)\n\n# Convert the character column to a numeric data type\ndata_clean <- data_raw %>%\n  # Use mutate() to modify the existing column\n  mutate(\n    # Simply convert the character string to a numeric data type\n    rolling_resistance_watts = as.numeric(rolling_resistance_watts),\n    width_claimed = as.numeric(width_claimed),\n    weight_claimed = as.numeric(weight_claimed),\n    wet_grip = as.numeric(wet_grip),\n    puncture_score = as.numeric(puncture_score),\n    thickness = as.numeric(thickness),\n    knob_center = as.numeric(knob_center),\n    knob_edge = as.numeric(knob_edge)\n  )\n\n# View the cleaned data\nmessage(\"\\nCleaned and converted data:\")\nglimpse(data_clean)\n\n```\n\n# Gravel / CX\n\n\n```{r shiny, echo=FALSE}\n# Get a list of the numeric columns available for plotting\nplot_vars <- data_clean %>%\n  select(where(is.numeric)) %>%\n  names()\n\n# --- User Interface (UI) ---\nui <- fluidPage(\n  titlePanel(\"Interactive Tire Data Explorer\"),\n  sidebarLayout(\n    sidebarPanel(\n      # Dropdown for the X-axis variable\n      selectInput(\"x_var\", \"X-Axis Variable:\",\n                  choices = plot_vars, selected = \"rolling_resistance_watts\"),\n      # Dropdown for the Y-axis variable\n      selectInput(\"y_var\", \"Y-Axis Variable:\",\n                  choices = plot_vars, selected = \"puncture_score\"),\n      hr(), # Horizontal line for separation\n      # Output for displaying the correlation value\n      h4(\"Correlation (r-value):\"),\n      textOutput(\"correlation_output\")\n    ),\n    mainPanel(\n      # Display the interactive plot\n      plotlyOutput(\"interactive_plot\", width = \"100%\", height = \"600px\")\n    )\n  )\n)\n\n# --- Server Logic ---\nserver <- function(input, output) {\n\n  # Reactive expression to calculate the correlation\n  correlation_value <- reactive({\n    # Use req() to ensure the inputs are not NULL before calculating\n    req(input$x_var, input$y_var)\n\n    x_data <- data_clean[[input$x_var]]\n    y_data <- data_clean[[input$y_var]]\n\n    # Ensure there are no missing values in the selected data\n    clean_data <- na.omit(data.frame(x = x_data, y = y_data))\n\n    # Calculate and round the Pearson correlation coefficient\n    cor_val <- cor(clean_data$x, clean_data$y, use = \"complete.obs\")\n    round(cor_val, 2)\n  })\n\n  # Render the reactive plot\n  output$interactive_plot <- renderPlotly({\n    req(input$x_var, input$y_var)\n\n    # Build the ggplot object dynamically based on user selections\n    p <- ggplot(data_clean, aes_string(x = input$x_var, y = input$y_var)) +\n      geom_point(aes(color = brand,\n                     text = paste(\"Brand:\", brand, \"<br>Model:\", model))) +\n      labs(title = paste(input$y_var, \"vs.\", input$x_var),\n           x = input$x_var,\n           y = input$y_var) +\n      theme_minimal()\n\n    # Convert the ggplot object to a plotly object\n    ggplotly(p, tooltip = \"text\")\n  })\n\n  # Render the correlation value as text\n  output$correlation_output <- renderText({\n    paste(\"r =\", correlation_value())\n  })\n}\n\n# --- Run the application ---\nshinyApp(ui = ui, server = server)\n```\n","type":"text"},{"name":"rolling-resistance-analysis_files/figure-latex/dot plot puncture score vs rolling resistance-1.pdf","content":"JVBERi0xLjQKJdDUxdgKNCAwIG9iago8PAovTGVuZ3RoIDMzICAgICAgICAKL0ZpbHRlciAv\nRmxhdGVEZWNvZGUKPj4Kc3RyZWFtCnjaK+QyVDAAQkMFXVMQSs7l0vfMNVRwyecK5AIAVN8F\n6gplbmRzdHJlYW0KZW5kb2JqCjMgMCBvYmoKPDwKL1R5cGUgL1BhZ2UKL0NvbnRlbnRzIDQg\nMCBSCi9SZXNvdXJjZXMgMiAwIFIKL01lZGlhQm94IFswIDAgNDUyIDMxNF0KL1BhcmVudCA1\nIDAgUgo+PgplbmRvYmoKMSAwIG9iago8PAovVHlwZSAvWE9iamVjdAovU3VidHlwZSAvRm9y\nbQovRm9ybVR5cGUgMQovUFRFWC5GaWxlTmFtZSAoLi90bXAtcGRmY3JvcC0xNDUwLWltZy5w\nZGYpCi9QVEVYLlBhZ2VOdW1iZXIgMQovUFRFWC5JbmZvRGljdCA2IDAgUgovQkJveCBbMCAw\nIDQ2OCAzMjRdCi9SZXNvdXJjZXMgPDwKL1Byb2NTZXQgWyAvUERGIC9UZXh0IC9JbWFnZUMg\nXQovRm9udCA8PCAvRjIgNyAwIFI+PgovRXh0R1N0YXRlIDw8Cj4+L1hPYmplY3QgPDwKL0lt\nMCA4IDAgUgo+Pi9Db2xvclNwYWNlIDw8Ci9zUkdCIDkgMCBSCj4+Pj4KL0xlbmd0aCAxNDgz\nCi9GaWx0ZXIgL0ZsYXRlRGVjb2RlCj4+CnN0cmVhbQp4nMVZS28cNwy+z6/Q0T5EEfUcXZ0+\nUAMtGttAD05gBFsncGCvG6/d/P2SI2pGzg7HO8mhMHYM7kdK5EeKGmlBnSpQn9WX7m35KKON\nKQ8fe/rnrKd/D9fqL7XtXu/Ofj1Rm10H+KVR7XO32Xaydac+1jmGeVyvfa8c6AzKJa9dVBZN\nsn8+05tzHDNbq9rn+Zs/8Nvg1Nfu8r0y6u/OqNMO4+hgmPv3jkePOjp113mwuvcs3nbnDAOA\ntnHCWW4U+qCzaRSKPCnYOLgxKrBMCqnXNnF8d1UyRvdhgCEkndyIV3FSsC5pa0aFKk4KDjCc\nOCpUsVHIUYOdFFhsfNAmTRSWiJLTOUwBFbFhxPc69A0jRW4YsU5baBgpcqOQE30/KRSZFYKf\n/C1S4y6UiqqUsdgo4FB+YqSKDacp6jyRXsWGshC1y5MLLE4KY/ljnaWA5Qgx49NiXVH5A0Yb\novJeA5WTdl71GgKXP9A4SQWrbb+PhqCDUVhA3u2DWD+QXwCHTOyBfaaKFED2SEJLNBLqo7ZB\nRLGgg+gU9IY4EFBkdVjqxKrBBNiB2xIIpizNUABYTGgjoEKySgDSiIWa3ut+LoAyn4QW4gR0\nPjxwnopOGrHQKY44G19pp9KIJQXL8WWnzRw3JT4JLZEIqBB9yYU0YoleQkuc4nxz3FhjdU7i\niCV6MKDh8AQWUhaM0qAeyZuAwTZZXzlTIUsyYrZEuNAlTzlbSxlo75SMLOAGLhNmbaC9SYRx\nb6O3CAkOWUc5HoGjmsKs3eEdoaZw3mhMlgDXtAhw5V2Ay3oU4ZqAeXhMgABXCoXBmSxI5bVo\nVRXKRnP1zrUpGFWO1jnCzK1zhPkUjLg/yGPONhVOgjQmrwIJ5lWwKnaL719uKQlLZU7+LJS5\nBHPeBVjIESdWNHIuoXpEHXzFR2/bxK6biRMrGtmejEJP55QeYrsdrJupplswqukWx5wtIV6o\n0pi4YaWl4Ja4d2h7eI0w96LREverZqo0yjPNLN+6WNbNxItFMKq9yQOdCsTeJMDLvUk0Wng5\nkYwqYRKc8Fwn+4nlr53skbN4EI0yCdw6Anp+eJPiZIlGS8mSZ5rr6kx3wOP24euY6RaNZt2r\nMc0b1XUswM4EOnu/ZB3jkKo9a5c1GBGuhZo8HZjEviTBHJgEc1okmLnEIosL74kSzHFLMFe2\nAFdaJGv2PGPbX1g2AiyUDi8m0Wihsq1JGuZqA49kdE8iwaV0LITZW4QKO5g9WtMtkQcRZhKs\nT3T2Fa0FmNmwuAj9DNzc/q36nFy01y7OUBqmJzH6+hesKXXxUeXx+nF4DCJ1LK+S0QlV7tSR\nM8fq4nP388Uw8MuW4AOli0zjSlMLWed+MM0Hm8Jw72Wz17E4DHa0/Z8odJGOyZb67OBRODgW\ncAMboyUcTkO2dHvXmB48K1UxLtDJ1B48qwtAN36NaVjD/XOeDQ9dn894Bng+fZEhYveNKtE1\nM05/efRwf3t7s/109XC9u9k9fthurq++HuPGoY4+PD7ujt+ri9PWuRUONLO+apzBjFFHsz2t\nYWLgn6ft5vHp4fpqt7l/uD6EjR9mwdtMzc0abJTFic390/bx27m/dKDQDkdiAyhNcXPXTcO+\nKuMOMv4RlkiJhB7b2fj169/ujPrpvnu7F8/4S8T+bx7llwiX5F8ivHfDroSueUvX3nh8ojeo\nItOdctVwuG+FRqPIrYbP1HcnjSK3GlQ+udEocquBu4uDRqPIjYY1QA1o1GB50ECXhrvSGstE\ne42FNcZYWKOJhTXGWFijiYU1xlhYo4mFNcZYWKOJpWhMsdSKGmP5jmKdaxg+2OG1ASzdwQ99\n6tBeU03RNc/NZq0pZij6squtNY1O93Ew9WtNe6BX8lUbQTXNPWVo2Et/dE/7nm7jvuk2g8y/\nFZrMGbw8OitNV52NTVf9uytdV6s/uR+qc+qH6t3R2fUGdT493X54UCc329274722PH66/wBn\nWvmICmVuZHN0cmVhbQplbmRvYmoKNiAwIG9iago8PAovQ3JlYXRpb25EYXRlIChEOjIwMjUx\nMDAxMDcxMjA3KQovTW9kRGF0ZSAoRDoyMDI1MTAwMTA3MTIwNykKL1RpdGxlIChSIEdyYXBo\naWNzIE91dHB1dCkKL1Byb2R1Y2VyIChSIDQuNS4xKQovQ3JlYXRvciAoUikKPj4KZW5kb2Jq\nCjcgMCBvYmoKPDwKL1R5cGUgL0ZvbnQKL1N1YnR5cGUgL1R5cGUxCi9OYW1lIC9GMgovQmFz\nZUZvbnQgL0hlbHZldGljYQovRW5jb2RpbmcgMTAgMCBSCj4+CmVuZG9iago4IDAgb2JqCjw8\nCi9UeXBlIC9YT2JqZWN0Ci9TdWJ0eXBlIC9JbWFnZQovV2lkdGggMQovSGVpZ2h0IDMwMAov\nQ29sb3JTcGFjZSA5IDAgUgovQml0c1BlckNvbXBvbmVudCA4Ci9MZW5ndGggNjQxCi9JbnRl\ncnBvbGF0ZSB0cnVlCi9GaWx0ZXIgL0ZsYXRlRGVjb2RlCj4+CnN0cmVhbQp4nB3CZVuTYQAG\n0B9BSAgIitKMHoxR22AMtrGku7u7u7u7u8XuxG7FDuzExq/ez3uuI1/9J1/dlq9sy1b+ypb/\nkEu/pUu/pIv4U7rwQ4Lz3yXzW5K5LfHcN/HsV3Lmi2jms2gaP4mmPnrh5Ady4r1w4p1wHN8K\nx94IcPS1YHRTMLLJH3nFH35JDr3gDz33HMRnngNP0aP/CfWxR98jHvY+5PVu8Ho23HseuHff\nJ7vucbvucjvxDrfjNrq13yLbbrq13XBtxeuuLdeQ03yV03yFbLrMxsZL7MZ1dsM6q+Eiq/4C\nWXeeVXfOpRbPutTgGefq02TVKeeqk05YecKp8rhTBR5zLMejjmVH0KH0sEPpIYcSPMgsxgPM\n4jVm0Zp90X77wlWyYAUZ+cuM/CVGHi7a5S5Q5+1y5m1z5myzZ8msGaRnTtMzp+gZOGmTPkEd\nt0nDMevUUTJlBK2Sh62Sh6yScNASEwcsE/stE7DPIr6XjOtB89hu89guMqYTzaI7zKLbzaKw\njRaJrbTIFloENpuGY5NpWCOahDZQ601C6tA4uJYMqjEOqjYKxCoyoBIN/SsM/csN/bDMwBdL\nDXxLDHywWN8bi/TlhagnL9CTYb6eFPP2SXJJcQ41e68oi/TKRF1hBjVdV5CGe/ippGcKNXm3\nRxLJS0QdXoKOO8brcONQ2y2WGqPtitG7OFEkOxK12BFaLAzXcsEwTZdQTWcM0XTCYA1HDNJw\nDNRwwICdTPQn7f1QneFL9VG381ZDWzlVpkaXqdKlqjYoUbUWo4q1SMUKvVQsUbgDLQSkOR+V\nzT2VzTxIGg+VaO5KpsglTdwU0diVylE04igYsRUMkfUflGRuKwplbmRzdHJlYW0KZW5kb2Jq\nCjkgMCBvYmoKWy9JQ0NCYXNlZCAxMSAwIFJdCmVuZG9iagoxMCAwIG9iago8PAovVHlwZSAv\nRW5jb2RpbmcKL0Jhc2VFbmNvZGluZyAvV2luQW5zaUVuY29kaW5nCi9EaWZmZXJlbmNlcyBb\nIDQ1L21pbnVzIDk2L3F1b3RlbGVmdCAxNDQvZG90bGVzc2kvZ3JhdmUvYWN1dGUvY2lyY3Vt\nZmxleC90aWxkZS9tYWNyb24vYnJldmUvZG90YWNjZW50L2RpZXJlc2lzLy5ub3RkZWYvcmlu\nZy9jZWRpbGxhLy5ub3RkZWYvaHVuZ2FydW1sYXV0L29nb25lay9jYXJvbi9zcGFjZV0KPj4K\nZW5kb2JqCjExIDAgb2JqCjw8Ci9BbHRlcm5hdGUgL0RldmljZVJHQgovTiAzCi9MZW5ndGgg\nMjU5NgovRmlsdGVyIC9GbGF0ZURlY29kZQo+PgpzdHJlYW0KeJydlndUU9kWh8+9N71QkhCK\nlNBraFICSA29SJEuKjEJEErAkAAiNkRUcERRkaYIMijggKNDkbEiioUBUbHrBBlE1HFwFBuW\nSWStGd+8ee/Nm98f935rn73P3Wfvfda6AJD8gwXCTFgJgAyhWBTh58WIjYtnYAcBDPAAA2wA\n4HCzs0IW+EYCmQJ82IxsmRP4F726DiD5+yrTP4zBAP+flLlZIjEAUJiM5/L42VwZF8k4PVec\n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\nry5aPb7Gb82BtYS1aWt/KLQuLC98uS5mXU+RVtGaorH1futbixWKRcU3NrhsqNuI2ijYOLhp\n7qaqTR9LeCUXS61LK0rfb+ZuvviVzVeVX33akrRlsMyhbM9WzFbh1uvb3LcdKFcuzy8f2x6y\nvXMHY0fJjpc7l+y8UGFXUbeLsEuyS1oZXNldZVC1tep9dUr1SI1XTXutZu2m2te7ebuv7PHY\n01anVVda926vYO/Ner/6zgajhop9mH05+x42Rjf2f836urlJo6m06cN+4X7pgYgDfc2Ozc0t\nmi1lrXCrpHXyYMLBy994f9Pdxmyrb6e3lx4ChySHHn+b+O31w0GHe4+wjrR9Z/hdbQe1o6QT\n6lzeOdWV0iXtjusePhp4tLfHpafje8vv9x/TPVZzXOV42QnCiaITn07mn5w+lXXq6enk02O9\nS3rvnIk9c60vvG/wbNDZ8+d8z53p9+w/ed71/LELzheOXmRd7LrkcKlzwH6g4wf7HzoGHQY7\nhxyHui87Xe4Znjd84or7ldNXva+euxZw7dLI/JHh61HXb95IuCG9ybv56Fb6ree3c27P3Flz\nF3235J7SvYr7mvcbfjT9sV3qID0+6j068GDBgztj3LEnP2X/9H686CH5YcWEzkTzI9tHxyZ9\nJy8/Xvh4/EnWk5mnxT8r/1z7zOTZd794/DIwFTs1/lz0/NOvm1+ov9j/0u5l73TY9P1XGa9m\nXpe8UX9z4C3rbf+7mHcTM7nvse8rP5h+6PkY9PHup4xPn34D94Tz+wplbmRzdHJlYW0KZW5k\nb2JqCjIgMCBvYmoKPDwKL1hPYmplY3QgPDwgL0ltMSAxIDAgUiA+PgovUHJvY1NldCBbIC9Q\nREYgXQo+PgplbmRvYmoKNSAwIG9iago8PAovVHlwZSAvUGFnZXMKL0NvdW50IDEKL0tpZHMg\nWzMgMCBSXQo+PgplbmRvYmoKMTIgMCBvYmoKPDwKL1R5cGUgL0NhdGFsb2cKL1BhZ2VzIDUg\nMCBSCj4+CmVuZG9iagoxMyAwIG9iago8PAovUHJvZHVjZXIgKHBkZlRlWC0xLjQwLjIwKQov\nQ3JlYXRvciAoVGVYKQovQ3JlYXRpb25EYXRlIChEOjIwMjUxMDAxMDcxMjA4WikKL01vZERh\ndGUgKEQ6MjAyNTEwMDEwNzEyMDhaKQovVHJhcHBlZCAvRmFsc2UKL1BURVguRnVsbGJhbm5l\nciAoVGhpcyBpcyBwZGZUZVgsIFZlcnNpb24gMy4xNDE1OTI2NS0yLjYtMS40MC4yMCAoVGVY\nIExpdmUgMjAxOS9EZWJpYW4pIGtwYXRoc2VhIHZlcnNpb24gNi4zLjEpCj4+CmVuZG9iagp4\ncmVmCjAgMTQKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMjMxIDAwMDAwIG4gCjAwMDAw\nMDYxMDYgMDAwMDAgbiAKMDAwMDAwMDEyNyAwMDAwMCBuIAowMDAwMDAwMDE1IDAwMDAwIG4g\nCjAwMDAwMDYxNzEgMDAwMDAgbiAKMDAwMDAwMjA3MyAwMDAwMCBuIAowMDAwMDAyMjE1IDAw\nMDAwIG4gCjAwMDAwMDIzMTIgMDAwMDAgbiAKMDAwMDAwMzEzMyAwMDAwMCBuIAowMDAwMDAz\nMTY3IDAwMDAwIG4gCjAwMDAwMDM0MDkgMDAwMDAgbiAKMDAwMDAwNjIyOCAwMDAwMCBuIAow\nMDAwMDA2Mjc4IDAwMDAwIG4gCnRyYWlsZXIKPDwgL1NpemUgMTQKL1Jvb3QgMTIgMCBSCi9J\nbmZvIDEzIDAgUgovSUQgWzw1QjFBQjQxNDc2NDEyRTIyQjMwMEQwNDIzNjZFREI0Nz4gPDVC\nMUFCNDE0NzY0MTJFMjJCMzAwRDA0MjM2NkVEQjQ3Pl0gPj4Kc3RhcnR4cmVmCjY1MzMKJSVF\nT0YK","type":"binary"},{"name":"rolling-resistance-analysis_files/figure-latex/plot-data-1.pdf","content":"JVBERi0xLjQKJdDUxdgKNCAwIG9iago8PAovTGVuZ3RoIDM0ICAgICAgICAKL0ZpbHRlciAv\nRmxhdGVEZWNvZGUKPj4Kc3RyZWFtCnjaK+QyVDAAQkMFXSAyUUjO5dL3zDVUcMnnCuQCAFSI\nBeUKZW5kc3RyZWFtCmVuZG9iagozIDAgb2JqCjw8Ci9UeXBlIC9QYWdlCi9Db250ZW50cyA0\nIDAgUgovUmVzb3VyY2VzIDIgMCBSCi9NZWRpYUJveCBbMCAwIDQ2NyAzMTVdCi9QYXJlbnQg\nNSAwIFIKPj4KZW5kb2JqCjEgMCBvYmoKPDwKL1R5cGUgL1hPYmplY3QKL1N1YnR5cGUgL0Zv\ncm0KL0Zvcm1UeXBlIDEKL1BURVguRmlsZU5hbWUgKC4vcm9sbGluZy1yZXNpc3RhbmNlLWFu\nYWx5c2lzX2ZpbGVzL2ZpZ3VyZS1sYXRleC9wbG90LWRhdGEtMS5wZGYpCi9QVEVYLlBhZ2VO\ndW1iZXIgMQovUFRFWC5JbmZvRGljdCA2IDAgUgovQkJveCBbMCAwIDQ2OCAzMjRdCi9SZXNv\ndXJjZXMgPDwKL1Byb2NTZXQgWyAvUERGIC9UZXh0IF0KL0ZvbnQgPDwgL0YyIDcgMCBSPj4K\nL0V4dEdTdGF0ZSA8PAo+Pi9Db2xvclNwYWNlIDw8Ci9zUkdCIDggMCBSCj4+Pj4KL0xlbmd0\naCA1ODk4Ci9GaWx0ZXIgL0ZsYXRlRGVjb2RlCj4+CnN0cmVhbQp4nMVdUXcbN65+96+YR/vs\nyXTIIWc4j4njJO112qzlbXtb74NiTWJtZMkryW3SX38BkCMBNimLcs+5D7ENARpySBD4AJCM\nKn4oVPGf4r9H//T/iqqsKv/DNA5/1drgr2Vf/FLMj75bXbx9VVyvjhR8WBX85+p6fpT+9lHx\naWiD2tFNXXa2qFXZqUJ1rrRtoW1dKiObOh3BQzutC/5zdPojfGrr4s+j3/9dVMXkqCp+OIIX\nOVLU+PujurIgGR5/O5Da2bKyxexodFS3qnTVVsCTTMDUbdm4jUAgmQC8dbvtwPA+unQaxRtd\nWh1IlB74pqwt4xPJ+bZ0LeMTyfltWXeMTyTnO3zPLZ9IxjdVacyW70nOh9dtGJ9Izq9Lw9r3\nJOfD8CjGJ5LzG5y2LZ9Izget4e0TyfldaR3jE8n4VpWq2vI9yfm6bNj4eJLzTanY/HiS823Z\n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\njPByM8LPGVEYOtnFmnWxrranOYe4ZXFXvJp+CSUD2mi0KgJo/lY8nv30cB/9HygfyxcKZW5k\nc3RyZWFtCmVuZG9iago2IDAgb2JqCjw8Ci9DcmVhdGlvbkRhdGUgKEQ6MjAyNTEwMDEwNzEy\nMDcpCi9Nb2REYXRlIChEOjIwMjUxMDAxMDcxMjA3KQovVGl0bGUgKFIgR3JhcGhpY3MgT3V0\ncHV0KQovUHJvZHVjZXIgKFIgNC41LjEpCi9DcmVhdG9yIChSKQo+PgplbmRvYmoKNyAwIG9i\nago8PAovVHlwZSAvRm9udAovU3VidHlwZSAvVHlwZTEKL05hbWUgL0YyCi9CYXNlRm9udCAv\nSGVsdmV0aWNhCi9FbmNvZGluZyA5IDAgUgo+PgplbmRvYmoKOCAwIG9iagpbL0lDQ0Jhc2Vk\nIDEwIDAgUl0KZW5kb2JqCjkgMCBvYmoKPDwKL1R5cGUgL0VuY29kaW5nCi9CYXNlRW5jb2Rp\nbmcgL1dpbkFuc2lFbmNvZGluZwovRGlmZmVyZW5jZXMgWyA0NS9taW51cyA5Ni9xdW90ZWxl\nZnQgMTQ0L2RvdGxlc3NpL2dyYXZlL2FjdXRlL2NpcmN1bWZsZXgvdGlsZGUvbWFjcm9uL2Jy\nZXZlL2RvdGFjY2VudC9kaWVyZXNpcy8ubm90ZGVmL3JpbmcvY2VkaWxsYS8ubm90ZGVmL2h1\nbmdhcnVtbGF1dC9vZ29uZWsvY2Fyb24vc3BhY2VdCj4+CmVuZG9iagoxMCAwIG9iago8PAov\nQWx0ZXJuYXRlIC9EZXZpY2VSR0IKL04gMwovTGVuZ3RoIDI1OTYKL0ZpbHRlciAvRmxhdGVE\nZWNvZGUKPj4Kc3RyZWFtCnicnZZ3VFPZFofPvTe9UJIQipTQa2hSAkgNvUiRLioxCRBKwJAA\nIjZEVHBEUZGmCDIo4ICjQ5GxIoqFAVGx6wQZRNRxcBQblklkrRnfvHnvzZvfH/d+a5+9z91n\n733WugCQ/IMFwkxYCYAMoVgU4efFiI2LZ2AHAQzwAANsAOBws7NCFvhGApkCfNiMbJkT+Be9\nug4g+fsq0z+MwQD/n5S5WSIxAFCYjOfy+NlcGRfJOD1XnCW3T8mYtjRNzjBKziJZgjJWk3Py\nLFt89pllDznzMoQ8GctzzuJl8OTcJ+ONORK+jJFgGRfnCPi5Mr4mY4N0SYZAxm/ksRl8TjYA\n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\nlc1XlV992pK0ZbDMoWzPVsxW4dbr29y3HShXLs8vH9sesr1zB2NHyY6XO5fsvFBhV1G3i7BL\nsktaGVzZXWVQtbXqfXVK9UiNV017rWbtptrXu3m7r+zx2NNWp1VXWvdur2DvzXq/+s4Go4aK\nfZh9OfseNkY39n/N+rq5SaOptOnDfuF+6YGIA33Njs3NLZotZa1wq6R18mDCwcvfeH/T3cZs\nq2+nt5ceAockhx5/m/jt9cNBh3uPsI60fWf4XW0HtaOkE+pc3jnVldIl7Y7rHj4aeLS3x6Wn\n43vL7/cf0z1Wc1zleNkJwomiE59O5p+cPpV16unp5NNjvUt675yJPXOtL7xv8GzQ2fPnfM+d\n6ffsP3ne9fyxC84Xjl5kXey65HCpc8B+oOMH+x86Bh0GO4cch7ovO13uGZ43fOKK+5XTV72v\nnrsWcO3SyPyR4etR12/eSLghvcm7+ehW+q3nt3Nuz9xZcxd9t+Se0r2K+5r3G340/bFd6iA9\nPuo9OvBgwYM7Y9yxJz9l//R+vOgh+WHFhM5E8yPbR8cmfScvP174ePxJ1pOZp8U/K/9c+8zk\n2Xe/ePwyMBU7Nf5c9PzTr5tfqL/Y/9LuZe902PT9VxmvZl6XvFF/c+At623/u5h3EzO577Hv\nKz+Yfuj5GPTx7qeMT59+A/eE8/sKZW5kc3RyZWFtCmVuZG9iagoyIDAgb2JqCjw8Ci9YT2Jq\nZWN0IDw8IC9JbTEgMSAwIFIgPj4KL1Byb2NTZXQgWyAvUERGIF0KPj4KZW5kb2JqCjUgMCBv\nYmoKPDwKL1R5cGUgL1BhZ2VzCi9Db3VudCAxCi9LaWRzIFszIDAgUl0KPj4KZW5kb2JqCjEx\nIDAgb2JqCjw8Ci9UeXBlIC9DYXRhbG9nCi9QYWdlcyA1IDAgUgo+PgplbmRvYmoKMTIgMCBv\nYmoKPDwKL1Byb2R1Y2VyIChwZGZUZVgtMS40MC4yMCkKL0NyZWF0b3IgKFRlWCkKL0NyZWF0\naW9uRGF0ZSAoRDoyMDI1MTAwMTA3MTIwN1opCi9Nb2REYXRlIChEOjIwMjUxMDAxMDcxMjA3\nWikKL1RyYXBwZWQgL0ZhbHNlCi9QVEVYLkZ1bGxiYW5uZXIgKFRoaXMgaXMgcGRmVGVYLCBW\nZXJzaW9uIDMuMTQxNTkyNjUtMi42LTEuNDAuMjAgKFRlWCBMaXZlIDIwMTkvRGViaWFuKSBr\ncGF0aHNlYSB2ZXJzaW9uIDYuMy4xKQo+PgplbmRvYmoKeHJlZgowIDEzCjAwMDAwMDAwMDAg\nNjU1MzUgZiAKMDAwMDAwMDIzMiAwMDAwMCBuIAowMDAwMDA5NzA0IDAwMDAwIG4gCjAwMDAw\nMDAxMjggMDAwMDAgbiAKMDAwMDAwMDAxNSAwMDAwMCBuIAowMDAwMDA5NzY5IDAwMDAwIG4g\nCjAwMDAwMDY0OTQgMDAwMDAgbiAKMDAwMDAwNjYzNiAwMDAwMCBuIAowMDAwMDA2NzMyIDAw\nMDAwIG4gCjAwMDAwMDY3NjYgMDAwMDAgbiAKMDAwMDAwNzAwNyAwMDAwMCBuIAowMDAwMDA5\nODI2IDAwMDAwIG4gCjAwMDAwMDk4NzYgMDAwMDAgbiAKdHJhaWxlcgo8PCAvU2l6ZSAxMwov\nUm9vdCAxMSAwIFIKL0luZm8gMTIgMCBSCi9JRCBbPDFBQUM5NkNGOTVFMTM0RUQ1OEVCM0Yz\nN0I1NDhDNTJDPiA8MUFBQzk2Q0Y5NUUxMzRFRDU4RUIzRjM3QjU0OEM1MkM+XSA+PgpzdGFy\ndHhyZWYKMTAxMzEKJSVFT0YK","type":"binary"}]
